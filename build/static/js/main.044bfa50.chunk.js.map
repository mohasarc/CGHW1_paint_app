{"version":3,"sources":["util/StateManager.ts","Components/Layers.tsx","Common/MV.js","Common/initShaders.js","Common/webgl-utils.js","shaders.ts","util/webglHelpers.ts","Components/ColorPicker.tsx","Components/ToolBox.tsx","Components/PaintArea.tsx","Components/ToolBar.tsx","App.tsx","index.tsx"],"names":["StateManager","state","id","cb","this","val","undefined","cbs","forEach","filtered","Object","keys","key","JSON","stringify","data","parsedData","parse","setState","console","warn","instance","count","Layers","useState","getInstance","getState","layers","setLayers","selectedLayer","setSelectedLayer","subscribe","Card","CardHeader","title","titleTypographyProps","variant","align","color","style","backgroundColor","CardContent","Box","sx","width","height","List","bgcolor","position","overflow","padding","ListItem","ListItemButton","onClick","newLayer","name","z_index","length","visible","shapes","vertexData","colorData","brushSizeData","boundingRectData","map","item","Grid","container","rowSpacing","columns","xs","sm","md","IconButton","e","layerId","changingLayer","find","layer","newLayers","toggleVisibility","currentTarget","ListItemText","primary","primaryTypographyProps","ButtonGroup","movingLayerIndex","i","moveLayerUp","moveLayerDown","filter","selectedLayerId","removeLayer","_argumentsToArray","args","concat","apply","Array","prototype","slice","radians","degrees","Math","PI","vec2","result","arguments","push","splice","vec3","vec4","mat2","v","m","matrix","mat3","mat4","equal","u","j","add","subtract","mult","sum","k","translate","x","y","z","isArray","rotate","angle","axis","normalize","c","cos","omc","s","sin","scale","lookAt","eye","at","up","n","cross","negate","dot","ortho","left","right","bottom","top","near","far","w","h","d","perspective","fovy","aspect","f","tan","transpose","sqrt","excludeLastComponent","last","pop","len","isFinite","mix","scaleSU","flatten","elemsAreArrays","floats","Float32Array","idx","sizeof","byteLength","initShaders","gl","vertexShader","fragmentShader","vertShdr","fragShdr","alert","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","msg","getShaderInfoLog","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","WebGLUtils","create3DContext","canvas","opt_attribs","names","context","ii","getContext","setupWebGL","showLink","str","parentNode","innerHTML","window","WebGLRenderingContext","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","colorPickerShaders","brushShaders","addAttribute","attributeName","buffer","size","vSize","type","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","attributePos","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","colors","MV","PickerCircle","pickerPos","setPickerPos","newPickerPos","cx","cy","r","stroke","ColorPicker","useEffect","initSaturationCanvas","initHueCanvas","paddingBottom","columnSpacing","prefColor","Button","borderRadius","handlePreferredColorsButtonEvent","event","hexColor","aRgbHex","match","Error","parseInt","convertToRGB","target","substr","cc","hueCanvas","document","getElementById","saturationCanvas","UTILS","preserveDrawingBuffer","viewport","clearColor","INIT","useProgram","vertexBuffer","createBuffer","FLOAT","colorBuffer","pick","addEventListener","pickColor","clientX","clientY","rects","rectsColors","pos","clickedPos","offsetLeft","offsetTop","pixel","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","bufferSubData","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLE_STRIP","selectorCircle","pickTheColor","render","rectColors","rect","TRIANGLE_FAN","ToolBox","pickedColor","setPickedColor","brushSize","setBrushSize","selectedTool","setSelectedTool","initPickedColor","hex","toString","join","pb","Divider","pt","Slider","value","min","valueLabelDisplay","onChange","newSize","mt","border","PAINT_CANVAS","PAINT_CANVAS_GL","WEBGL_PROGRAM","brushSizeBuffer","bindingRectBuffer","ToolBar","undo","redo","downloadObjectAsJson","component","hidden","changeHandler","serialize","dataStr","encodeURIComponent","downloadAnchorNode","createElement","setAttribute","exportName","body","appendChild","click","remove","fileReader","FileReader","onload","initWith","readAsText","files","curTimelineNode","timeLine","SelectionRect","selectionRectWidth","setSelectionRectWidth","selectionRectHeight","setSelectionRectHeight","selectionRectX","setSelectionRectX","selectionRectY","setSelectionRectY","handlePropChange","newRectSize","newRectPos","abs","strokeWidth","strokeDasharray","fill","PaintArea","initPaintCanvas","selectionRectElement","maxNumVertices","clientWidth","clientHeight","enable","DEPTH_TEST","handleMouseDown","handleMouseUp","handleMouseMove","cropping","code","currentLayer","getCurrentLayer","croppingLayer","unshift","confirmCopy","updateTimeline","DEPTH_BUFFER_BIT","lastRenderingEndIndex","shape","shapeIndex","POINTS","numRectangles","LINE_LOOP","numTriangles","t","TRIANGLES","numElipses","layerIndex","usedTool","selectionRectStartCoords","selectionRectEndCoords","selectionRectTopLeft","selectionRectBotRight","selectedShapes","point","existingBoundingRect","x1","y1","x2","y2","selectionRect","mostRightX1","mostTopY1","mostLeftX2","mostBottomY2","copySelectedRegion","newColor","bindingRect","t1","t2","t3","t4","newShape","drawRectangle","center","radiusX","radiusY","drawElipse","drawTriangle","redraw","newLine","newVertex","allPointsVertexData","prevPoint","addMidPoint","freeDraw","posClip","findLinearDistance","erase","delta","selectionRectPos","moveCopiedRegion","movementX","movementY","selectionRectPos1","selectionRectPos2","resizeRectangle","curSize","updatedVertexData","resizeElipse","resizeTriangle","a","b","allPoints","findMidPoint","dx","dy","timeline","currentLayerId","App","className","Container","mb","py","rootElement"],"mappings":"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","file":"static/js/main.044bfa50.chunk.js","sourcesContent":["/**\r\n * This singleton class is used to manage the state of the whole application\r\n * Any value that can be used by two different modules should be stored in the\r\n * state manager and read from it.\r\n */\r\nexport class StateManager {\r\n    static instance: StateManager;\r\n    state: { [id: string]: { val: any, cbs: Function[] } } = {};\r\n\r\n    /**\r\n     * @param id The id of the portion of state to subscribe to\r\n     * @param cb A callback that will be called when the state of [id] has changed\r\n     */\r\n    subscribe(id: string, cb: Function): void {\r\n        if (!this.state[id])\r\n            this.state[id] = { val: undefined, cbs: [] }\r\n\r\n        this.state[id].cbs = [...this.state[id].cbs, cb];\r\n    }\r\n\r\n    /**\r\n     * Returns the value of state at [id]\r\n     * @param id The id of the portion of state to get its value\r\n     * @returns \r\n     */\r\n    getState(id: string) {\r\n        if (!this.state[id])\r\n            return null;\r\n\r\n        return this.state[id].val;\r\n    }\r\n\r\n    /**\r\n     * Update the value of state at [id]\r\n     * @param id  The id of the portion of state to set its value\r\n     * @param val The new value\r\n     */\r\n    setState(id: string, val: any) {\r\n        if (!this.state[id])\r\n            this.state[id] = { val: undefined, cbs: [] }\r\n\r\n        this.state[id] = {\r\n            ...this.state[id],\r\n            val\r\n        }\r\n\r\n        this.state[id].cbs.forEach((cb) => {\r\n            cb();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Serialize the whole state into a string\r\n     * @returns \r\n     */\r\n    serialize() {\r\n        const filtered = { ...this.state };\r\n        Object.keys(filtered).forEach((key) => {\r\n            filtered[key].cbs = [];\r\n        });\r\n\r\n        return JSON.stringify(filtered);\r\n    }\r\n\r\n    /**\r\n     * Initialize the whole state with the derialized data\r\n     * @param data The serialized data to be parsed\r\n     */\r\n    initWith(data: string) {\r\n        const parsedData = JSON.parse(JSON.parse(data));\r\n        Object.keys(this.state).forEach((key) => {\r\n            if (parsedData[key] !== undefined) {\r\n                this.setState(key, parsedData[key].val)\r\n            } else {\r\n                console.warn('COULDNT FIND DATA');\r\n            }\r\n        });\r\n    }\r\n\r\n    static getInstance(): StateManager {\r\n        if (!StateManager.instance) {\r\n            StateManager.instance = new StateManager();\r\n        }\r\n\r\n        return StateManager.instance;\r\n    }\r\n}","import {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    ListItemText,\r\n    ListItemButton,\r\n    ListItem,\r\n    List,\r\n    Box,\r\n    IconButton,\r\n    ButtonGroup\r\n} from '@mui/material'\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport { useState } from 'react';\r\n\r\nimport { StateManager } from '../util/StateManager';\r\n\r\nexport interface Shape {\r\n    vertexData: number[], // Vec2\r\n    colorData: number[], // Vec4\r\n    brushSize: number[],\r\n    boundingRectData: number[], // Vec4\r\n    type: 'point' | 'triangle' | 'nofill-triangle' | 'rectangle' | 'nofill-rectangle' | 'elipse' | 'nofill-elipse',\r\n    center?: number[], // for elipse only\r\n    size?: { w: number, h: number }, // for elipse only\r\n}\r\n\r\nexport interface Layer {\r\n    name: string,\r\n    z_index: number,\r\n    visible: boolean,\r\n    id: string,\r\n    shapes: Shape[],\r\n}\r\n\r\nlet count = 1;\r\n\r\nexport function Layers() {\r\n    const [layers, setLayers] = useState(StateManager.getInstance().getState('layers'));\r\n    const [selectedLayer, setSelectedLayer] = useState(StateManager.getInstance().getState('selectedLayer'));\r\n\r\n    StateManager.getInstance().subscribe('layers', () => {\r\n        setLayers(StateManager.getInstance().getState('layers'));\r\n    });\r\n\r\n    StateManager.getInstance().subscribe('selectedLayer', () => {\r\n        setSelectedLayer(StateManager.getInstance().getState('selectedLayer'))\r\n    })\r\n\r\n    function addLayer() {\r\n        const newLayer = {\r\n            name: `New Layer (${count + 1})`,\r\n            z_index: layers.length,\r\n            visible: true,\r\n            id: `${count++}`,\r\n            shapes: [],\r\n            vertexData: [],\r\n            colorData: [],\r\n            brushSizeData: [],\r\n            boundingRectData: [], // The rectangle enclosing the pixels of a particular shape\r\n        };\r\n\r\n        StateManager.getInstance().setState('layers', [{ ...newLayer }, ...layers]);\r\n        StateManager.getInstance().setState('selectedLayer', newLayer.id);\r\n    }\r\n\r\n    function toggleVisibility(layerId: string) {\r\n        const changingLayer = layers.find((layer: Layer) => layer.id === layerId);\r\n        changingLayer.visible = !changingLayer.visible;\r\n        const newLayers = layers.map((layer: Layer) => {\r\n            if (layer.id == changingLayer.id)\r\n                return changingLayer;\r\n            else\r\n                return layer;\r\n        });\r\n\r\n        StateManager.getInstance().setState('layers', [...newLayers]);\r\n    }\r\n\r\n    function selectLayer(layerId: string) {\r\n        StateManager.getInstance().setState('selectedLayer', layerId);\r\n    }\r\n\r\n    function removeLayer(layerId: string) {\r\n        const newLayers = layers.filter((layer: Layer) => layer.id !== layerId);\r\n        const selectedLayerId = StateManager.getInstance().getState('selectedLayer');\r\n        StateManager.getInstance().setState('layers', [...newLayers]);\r\n\r\n        if (selectedLayerId === layerId) {\r\n            StateManager.getInstance().setState('selectedLayer', newLayers[0] ? newLayers[0].id : '');\r\n        }\r\n    }\r\n\r\n    function moveLayerUp(layerId: string) {\r\n        const newLayers = [...layers];\r\n\r\n        let movingLayerIndex: number = -1;\r\n        for (let i = 0; i < layers.length; i++) {\r\n            if (layers[i].id === layerId)\r\n                movingLayerIndex = i;\r\n        }\r\n\r\n        if (movingLayerIndex > 0 && movingLayerIndex < layers.length) {\r\n            newLayers[movingLayerIndex] = layers[movingLayerIndex - 1];\r\n            newLayers[movingLayerIndex - 1] = layers[movingLayerIndex];\r\n        }\r\n\r\n        StateManager.getInstance().setState('layers', [...newLayers]);\r\n    }\r\n\r\n    function moveLayerDown(layerId: string) {\r\n        const newLayers = [...layers];\r\n\r\n        let movingLayerIndex: number = -1;\r\n        for (let i = 0; i < layers.length; i++) {\r\n            if (layers[i].id === layerId)\r\n                movingLayerIndex = i;\r\n        }\r\n\r\n        if (movingLayerIndex >= 0 && movingLayerIndex < layers.length - 1) {\r\n            newLayers[movingLayerIndex] = layers[movingLayerIndex + 1];\r\n            newLayers[movingLayerIndex + 1] = layers[movingLayerIndex];\r\n        }\r\n\r\n        StateManager.getInstance().setState('layers', [...newLayers]);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title={'Layers'} titleTypographyProps={{ variant: 'body2', align: 'center', color: 'common.white' }} style={{ backgroundColor: '#323638' }} />\r\n            <CardContent style={{ backgroundColor: '#3b4245' }}>\r\n                <Box\r\n                    sx={{ width: '100%', height: 142 }}\r\n                >\r\n                    <List\r\n                        sx={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            bgcolor: 'background.dark',\r\n                            position: 'relative',\r\n                            overflow: 'auto',\r\n                            '& ul': { padding: 0 },\r\n                        }}\r\n                        style={{ backgroundColor: '#3b4245' }}\r\n                    >\r\n                        <ListItem >\r\n                            <ListItemButton style={{ width: '100%' }} onClick={addLayer}>\r\n                                <AddIcon style={{ width: '100%' }} sx={{ color: 'white' }} />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                        {layers.map((item: Layer) => (\r\n                            <ListItem style={{ backgroundColor: item.id === selectedLayer ? '#1e2224' : '' }}>\r\n                                <Grid container rowSpacing={1} columns={{ xs: 12, sm: 12, md: 12 }} >\r\n                                    <Grid item xs={2} sm={2} md={2}>\r\n                                        <Box>\r\n                                            <IconButton id={item.id} onClick={(e) => { toggleVisibility(e.currentTarget.id) }}>\r\n                                                {\r\n                                                    item.visible\r\n                                                        ? <VisibilityIcon sx={{ color: 'white' }} />\r\n                                                        : <VisibilityOffIcon sx={{ color: 'white' }} />\r\n                                                }\r\n                                            </IconButton>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} sm={4} md={4}>\r\n                                        <Box>\r\n                                            <ListItemButton id={item.id} onClick={(e) => { selectLayer(e.currentTarget.id) }}>\r\n                                                <ListItemText primary={item.name} primaryTypographyProps={{ variant: 'body2', align: 'left', color: 'common.white' }} />\r\n                                            </ListItemButton>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} sm={6} md={6}>\r\n                                        <ButtonGroup>\r\n                                            <IconButton id={item.id} onClick={(e) => { moveLayerUp(e.currentTarget.id) }}>\r\n                                                <ArrowDropUpIcon sx={{ color: 'white' }} />\r\n                                            </IconButton>\r\n                                            <IconButton id={item.id} onClick={(e) => { moveLayerDown(e.currentTarget.id) }}>\r\n                                                <ArrowDropDownIcon sx={{ color: 'white' }} />\r\n                                            </IconButton>\r\n                                            <IconButton id={item.id} onClick={(e) => { removeLayer(e.currentTarget.id) }}>\r\n                                                <ClearIcon sx={{ color: 'white' }} />\r\n                                            </IconButton>\r\n                                        </ButtonGroup>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","//////////////////////////////////////////////////////////////////////////////\n//\n//  Angel.js\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//----------------------------------------------------------------------------\n//\n//  Helper export functions\n//\n\nexport function _argumentsToArray( args )\n{\n    return [].concat.apply( [], Array.prototype.slice.apply(args) );\n}\n\n//----------------------------------------------------------------------------\n\nexport function radians( degrees ) {\n    return degrees * Math.PI / 180.0;\n}\n\n//----------------------------------------------------------------------------\n//\n//  Vector Constructors\n//\n\nexport function vec2()\n{\n    var result = _argumentsToArray( arguments );\n\n    switch ( result.length ) {\n    case 0: result.push( 0.0 );\n    case 1: result.push( 0.0 );\n    }\n\n    return result.splice( 0, 2 );\n}\n\nexport function vec3()\n{\n    var result = _argumentsToArray( arguments );\n\n    switch ( result.length ) {\n    case 0: result.push( 0.0 );\n    case 1: result.push( 0.0 );\n    case 2: result.push( 0.0 );\n    }\n\n    return result.splice( 0, 3 );\n}\n\nexport function vec4()\n{\n    var result = _argumentsToArray( arguments );\n\n    switch ( result.length ) {\n    case 0: result.push( 0.0 );\n    case 1: result.push( 0.0 );\n    case 2: result.push( 0.0 );\n    case 3: result.push( 1.0 );\n    }\n\n    return result.splice( 0, 4 );\n}\n\n//----------------------------------------------------------------------------\n//\n//  Matrix Constructors\n//\n\nexport function mat2()\n{\n    var v = _argumentsToArray( arguments );\n\n    var m = [];\n    switch ( v.length ) {\n    case 0:\n        v[0] = 1;\n    case 1:\n        m = [\n            vec2( v[0],  0.0 ),\n            vec2(  0.0, v[0] )\n        ];\n        break;\n\n    default:\n        m.push( vec2(v) );  v.splice( 0, 2 );\n        m.push( vec2(v) );\n        break;\n    }\n\n    m.matrix = true;\n\n    return m;\n}\n\n//----------------------------------------------------------------------------\n\nexport function mat3()\n{\n    var v = _argumentsToArray( arguments );\n\n    var m = [];\n    switch ( v.length ) {\n    case 0:\n        v[0] = 1;\n    case 1:\n        m = [\n            vec3( v[0],  0.0,  0.0 ),\n            vec3(  0.0, v[0],  0.0 ),\n            vec3(  0.0,  0.0, v[0] )\n        ];\n        break;\n\n    default:\n        m.push( vec3(v) );  v.splice( 0, 3 );\n        m.push( vec3(v) );  v.splice( 0, 3 );\n        m.push( vec3(v) );\n        break;\n    }\n\n    m.matrix = true;\n\n    return m;\n}\n\n//----------------------------------------------------------------------------\n\nexport function mat4()\n{\n    var v = _argumentsToArray( arguments );\n\n    var m = [];\n    switch ( v.length ) {\n    case 0:\n        v[0] = 1;\n    case 1:\n        m = [\n            vec4( v[0], 0.0,  0.0,   0.0 ),\n            vec4( 0.0,  v[0], 0.0,   0.0 ),\n            vec4( 0.0,  0.0,  v[0],  0.0 ),\n            vec4( 0.0,  0.0,  0.0,  v[0] )\n        ];\n        break;\n\n    default:\n        m.push( vec4(v) );  v.splice( 0, 4 );\n        m.push( vec4(v) );  v.splice( 0, 4 );\n        m.push( vec4(v) );  v.splice( 0, 4 );\n        m.push( vec4(v) );\n        break;\n    }\n\n    m.matrix = true;\n\n    return m;\n}\n\n//----------------------------------------------------------------------------\n//\n//  Generic Mathematical Operations for Vectors and Matrices\n//\n\nexport function equal( u, v )\n{\n    if ( u.length != v.length ) { return false; }\n   \n    if ( u.matrix && v.matrix ) {\n        for ( var i = 0; i < u.length; ++i ) {\n            if ( u[i].length != v[i].length ) { return false; }\n            for ( var j = 0; j < u[i].length; ++j ) {\n                if ( u[i][j] !== v[i][j] ) { return false; }\n            }\n        }\n    }\n    else if ( u.matrix && !v.matrix || !u.matrix && v.matrix ) {\n        return false;\n    }\n    else {\n        for ( var i = 0; i < u.length; ++i ) {\n            if ( u[i] !== v[i] ) { return false; }\n        }\n    }\n\n    return true;\n}\n\n//----------------------------------------------------------------------------\n\nexport function add( u, v )\n{\n    var result = [];\n\n    if ( u.matrix && v.matrix ) {\n        if ( u.length != v.length ) {\n            throw \"add(): trying to add matrices of different dimensions\";\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            if ( u[i].length != v[i].length ) {\n                throw \"add(): trying to add matrices of different dimensions\";\n            }\n            result.push( [] );\n            for ( var j = 0; j < u[i].length; ++j ) {\n                result[i].push( u[i][j] + v[i][j] );\n            }\n        }\n\n        result.matrix = true;\n\n        return result;\n    }\n    else if ( u.matrix && !v.matrix || !u.matrix && v.matrix ) {\n        throw \"add(): trying to add matrix and non-matrix variables\";\n    }\n    else {\n        if ( u.length != v.length ) {\n            throw \"add(): vectors are not the same dimension\";\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            result.push( u[i] + v[i] );\n        }\n\n        return result;\n    }\n}\n\n//----------------------------------------------------------------------------\n\nexport function subtract( u, v )\n{\n    var result = [];\n\n    if ( u.matrix && v.matrix ) {\n        if ( u.length != v.length ) {\n            throw \"subtract(): trying to subtract matrices\" +\n                \" of different dimensions\";\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            if ( u[i].length != v[i].length ) {\n                throw \"subtract(): trying to subtact matrices\" +\n                    \" of different dimensions\";\n            }\n            result.push( [] );\n            for ( var j = 0; j < u[i].length; ++j ) {\n                result[i].push( u[i][j] - v[i][j] );\n            }\n        }\n\n        result.matrix = true;\n\n        return result;\n    }\n    else if ( u.matrix && !v.matrix || !u.matrix && v.matrix ) {\n        throw \"subtact(): trying to subtact  matrix and non-matrix variables\";\n    }\n    else {\n        if ( u.length != v.length ) {\n            throw \"subtract(): vectors are not the same length\";\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            result.push( u[i] - v[i] );\n        }\n\n        return result;\n    }\n}\n\n//----------------------------------------------------------------------------\n\nexport function mult( u, v )\n{\n    var result = [];\n\n    if ( u.matrix && v.matrix ) {\n        if ( u.length != v.length ) {\n            throw \"mult(): trying to add matrices of different dimensions\";\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            if ( u[i].length != v[i].length ) {\n                throw \"mult(): trying to add matrices of different dimensions\";\n            }\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            result.push( [] );\n\n            for ( var j = 0; j < v.length; ++j ) {\n                var sum = 0.0;\n                for ( var k = 0; k < u.length; ++k ) {\n                    sum += u[i][k] * v[k][j];\n                }\n                result[i].push( sum );\n            }\n        }\n\n        result.matrix = true;\n\n        return result;\n    }\n    else {\n        if ( u.length != v.length ) {\n            throw \"mult(): vectors are not the same dimension\";\n        }\n\n        for ( var i = 0; i < u.length; ++i ) {\n            result.push( u[i] * v[i] );\n        }\n\n        return result;\n    }\n}\n\n//----------------------------------------------------------------------------\n//\n//  Basic Transformation Matrix Generators\n//\n\nexport function translate( x, y, z )\n{\n    if ( Array.isArray(x) && x.length == 3 ) {\n        z = x[2];\n        y = x[1];\n        x = x[0];\n    }\n\n    var result = mat4();\n    result[0][3] = x;\n    result[1][3] = y;\n    result[2][3] = z;\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n\nexport function rotate( angle, axis )\n{\n    if ( !Array.isArray(axis) ) {\n        axis = [ arguments[1], arguments[2], arguments[3] ];\n    }\n\n    var v = normalize( axis );\n\n    var x = v[0];\n    var y = v[1];\n    var z = v[2];\n\n    var c = Math.cos( radians(angle) );\n    var omc = 1.0 - c;\n    var s = Math.sin( radians(angle) );\n\n    var result = mat4(\n        vec4( x*x*omc + c,   x*y*omc - z*s, x*z*omc + y*s, 0.0 ),\n        vec4( x*y*omc + z*s, y*y*omc + c,   y*z*omc - x*s, 0.0 ),\n        vec4( x*z*omc - y*s, y*z*omc + x*s, z*z*omc + c,   0.0 ),\n        vec4()\n    );\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n\nexport function scale( x, y, z )\n{\n    if ( Array.isArray(x) && x.length == 3 ) {\n        z = x[2];\n        y = x[1];\n        x = x[0];\n    }\n\n    var result = mat4();\n    result[0][0] = x;\n    result[1][1] = y;\n    result[2][2] = z;\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n//\n//  ModelView Matrix Generators\n//\n\nexport function lookAt( eye, at, up )\n{\n    if ( !Array.isArray(eye) || eye.length != 3) {\n        throw \"lookAt(): first parameter [eye] must be an a vec3\";\n    }\n\n    if ( !Array.isArray(at) || at.length != 3) {\n        throw \"lookAt(): first parameter [at] must be an a vec3\";\n    }\n\n    if ( !Array.isArray(up) || up.length != 3) {\n        throw \"lookAt(): first parameter [up] must be an a vec3\";\n    }\n\n    if ( equal(eye, at) ) {\n        return mat4();\n    }\n\n    var v = normalize( subtract(at, eye) );  // view direction vector\n    var n = normalize( cross(v, up) );       // perpendicular vector\n    var u = normalize( cross(n, v) );        // \"new\" up vector\n\n    v = negate( v );\n\n    var result = mat4(\n        vec4( n, -dot(n, eye) ),\n        vec4( u, -dot(u, eye) ),\n        vec4( v, -dot(v, eye) ),\n        vec4()\n    );\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n//\n//  Projection Matrix Generators\n//\n\nexport function ortho( left, right, bottom, top, near, far )\n{\n    if ( left == right ) { throw \"ortho(): left and right are equal\"; }\n    if ( bottom == top ) { throw \"ortho(): bottom and top are equal\"; }\n    if ( near == far )   { throw \"ortho(): near and far are equal\"; }\n\n    var w = right - left;\n    var h = top - bottom;\n    var d = far - near;\n\n    var result = mat4();\n    result[0][0] = 2.0 / w;\n    result[1][1] = 2.0 / h;\n    result[2][2] = -2.0 / d;\n    result[0][3] = -(left + right) / w;\n    result[1][3] = -(top + bottom) / h;\n    result[2][3] = -(near + far) / d;\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n\nexport function perspective( fovy, aspect, near, far )\n{\n    var f = 1.0 / Math.tan( radians(fovy) / 2 );\n    var d = far - near;\n\n    var result = mat4();\n    result[0][0] = f / aspect;\n    result[1][1] = f;\n    result[2][2] = -(near + far) / d;\n    result[2][3] = -2 * near * far / d;\n    result[3][2] = -1;\n    result[3][3] = 0.0;\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n//\n//  Matrix export functions\n//\n\nexport function transpose( m )\n{\n    if ( !m.matrix ) {\n        return \"transpose(): trying to transpose a non-matrix\";\n    }\n\n    var result = [];\n    for ( var i = 0; i < m.length; ++i ) {\n        result.push( [] );\n        for ( var j = 0; j < m[i].length; ++j ) {\n            result[i].push( m[j][i] );\n        }\n    }\n\n    result.matrix = true;\n    \n    return result;\n}\n\n//----------------------------------------------------------------------------\n//\n//  Vector export functions\n//\n\nexport function dot( u, v )\n{\n    if ( u.length != v.length ) {\n        throw \"dot(): vectors are not the same dimension\";\n    }\n\n    var sum = 0.0;\n    for ( var i = 0; i < u.length; ++i ) {\n        sum += u[i] * v[i];\n    }\n\n    return sum;\n}\n\n//----------------------------------------------------------------------------\n\nexport function negate( u )\n{\n    var result = [];\n    for ( var i = 0; i < u.length; ++i ) {\n        result.push( -u[i] );\n    }\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n\nexport function cross( u, v )\n{\n    if ( !Array.isArray(u) || u.length < 3 ) {\n        throw \"cross(): first argument is not a vector of at least 3\";\n    }\n\n    if ( !Array.isArray(v) || v.length < 3 ) {\n        throw \"cross(): second argument is not a vector of at least 3\";\n    }\n\n    var result = [ \n        u[1]*v[2] - u[2]*v[1],\n        u[2]*v[0] - u[0]*v[2],\n        u[0]*v[1] - u[1]*v[0]\n    ];\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n\nexport function length( u )\n{\n    return Math.sqrt( dot(u, u) );\n}\n\n//----------------------------------------------------------------------------\n\nexport function normalize( u, excludeLastComponent )\n{ \n    if ( excludeLastComponent ) {\n        var last = u.pop();\n    }\n    \n    var len = length( u );\n\n    if ( !isFinite(len) ) {\n        throw \"normalize: vector \" + u + \" has zero length\";\n    }\n    \n    for ( var i = 0; i < u.length; ++i ) {\n        u[i] /= len;\n    }\n\n    if ( excludeLastComponent ) {\n        u.push( last );\n    }\n            \n    return u;\n}\n\n//----------------------------------------------------------------------------\n\nexport function mix( u, v, s )\n{\n    if ( typeof s !== \"number\" ) {\n        throw \"mix: the last paramter \" + s + \" must be a number\";\n    }\n    \n    if ( u.length != v.length ) {\n        throw \"vector dimension mismatch\";\n    }\n\n    var result = [];\n    for ( var i = 0; i < u.length; ++i ) {\n        result.push( (1.0 - s) * u[i] +  s * v[i] );\n    }\n\n    return result;\n}\n\n//----------------------------------------------------------------------------\n//\n// Vector and Matrix export functions\n//\n\nexport function scaleSU( s, u )\n{\n    if ( !Array.isArray(u) ) {\n        throw \"scale: second parameter \" + u + \" is not a vector\";\n    }\n\n    var result = [];\n    for ( var i = 0; i < u.length; ++i ) {\n        result.push( s * u[i] );\n    }\n    \n    return result;\n}\n\n//----------------------------------------------------------------------------\n//\n//\n//\n\nexport function flatten( v )\n{\n    if ( v.matrix === true ) {\n        v = transpose( v );\n    }\n\n    var n = v.length;\n    var elemsAreArrays = false;\n\n    if ( Array.isArray(v[0]) ) {\n        elemsAreArrays = true;\n        n *= v[0].length;\n    }\n\n    var floats = new Float32Array( n );\n\n    if ( elemsAreArrays ) {\n        var idx = 0;\n        for ( var i = 0; i < v.length; ++i ) {\n            for ( var j = 0; j < v[i].length; ++j ) {\n                floats[idx++] = v[i][j];\n            }\n        }\n    }\n    else {\n        for ( var i = 0; i < v.length; ++i ) {\n            floats[i] = v[i];\n        }\n    }\n\n    return floats;\n}\n\n//----------------------------------------------------------------------------\n\nexport var sizeof = {\n    'vec2' : new Float32Array( flatten(vec2()) ).byteLength,\n    'vec3' : new Float32Array( flatten(vec3()) ).byteLength,\n    'vec4' : new Float32Array( flatten(vec4()) ).byteLength,\n    'mat2' : new Float32Array( flatten(mat2()) ).byteLength,\n    'mat3' : new Float32Array( flatten(mat3()) ).byteLength,\n    'mat4' : new Float32Array( flatten(mat4()) ).byteLength\n};\n","//\n//  initShaders.js\n//\n\nexport function initShaders( gl, vertexShader, fragmentShader )\n{\n    var vertShdr;\n    var fragShdr;\n\n    if ( vertexShader === undefined ) { \n        alert( \"Unable to load vertex shader \" );\n        return -1;\n    }\n    else {\n        vertShdr = gl.createShader( gl.VERTEX_SHADER );\n        gl.shaderSource( vertShdr, vertexShader );\n        gl.compileShader( vertShdr );\n        if ( !gl.getShaderParameter(vertShdr, gl.COMPILE_STATUS) ) {\n            var msg = \"Vertex shader failed to compile.  The error log is:\"\n        \t+ \"<pre>\" + gl.getShaderInfoLog( vertShdr ) + \"</pre>\";\n            alert( msg );\n            return -1;\n        }\n    }\n\n    if ( fragmentShader === undefined ) { \n        alert( \"Unable to load Fragment shader \" );\n        return -1;\n    }\n    else {\n        fragShdr = gl.createShader( gl.FRAGMENT_SHADER );\n        gl.shaderSource( fragShdr, fragmentShader );\n        gl.compileShader( fragShdr );\n        if ( !gl.getShaderParameter(fragShdr, gl.COMPILE_STATUS) ) {\n            var msg = \"Fragment shader failed to compile.  The error log is:\"\n        \t+ \"<pre>\" + gl.getShaderInfoLog( fragShdr ) + \"</pre>\";\n            alert( msg );\n            return -1;\n        }\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader( program, vertShdr );\n    gl.attachShader( program, fragShdr );\n    gl.linkProgram( program );\n    \n    if ( !gl.getProgramParameter(program, gl.LINK_STATUS) ) {\n        var msg = \"Shader program failed to link.  The error log is:\"\n            + \"<pre>\" + gl.getProgramInfoLog( program ) + \"</pre>\";\n        alert( msg );\n        return -1;\n    }\n\n    return program;\n}\n","/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an appropriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\nexport let WebGLUtils = function() {\r\n\r\n/**\r\n * Creates the HTLM for a failure message\r\n * @param {string} canvasContainerId id of container of th\r\n *        canvas.\r\n * @return {string} The html.\r\n */\r\nvar makeFailHTML = function(msg) {\r\n  return '' +\r\n    '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n    '<td align=\"center\">' +\r\n    '<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n    '<div style=\"\">' + msg + '</div>' +\r\n    '</div>' +\r\n    '</td></tr></table>';\r\n};\r\n\r\n/**\r\n * Message for getting a webgl browser\r\n * @type {string}\r\n */\r\nvar GET_A_WEBGL_BROWSER = '' +\r\n  'This page requires a browser that supports WebGL.<br/>' +\r\n  '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n/**\r\n * Mesasge for need better hardware\r\n * @type {string}\r\n */\r\nvar OTHER_PROBLEM = '' +\r\n  \"It doesn't appear your computer can support WebGL.<br/>\" +\r\n  '<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>';\r\n\r\n/**\r\n * Creates a webgl context. If creation fails, it will\r\n * change the contents of the container of the <canvas>\r\n * tag to an error message with the correct links for WebGL.\r\n * @param {Element} canvas. The canvas element to create a\r\n *     context from.\r\n * @param {WebGLContextCreationAttributes} opt_attribs Any\r\n *     creation attributes you want to pass in.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\nvar setupWebGL = function(canvas, opt_attribs) {\r\n  function showLink(str) {\r\n    var container = canvas.parentNode;\r\n    if (container) {\r\n      container.innerHTML = makeFailHTML(str);\r\n    }\r\n  };\r\n\r\n  if (!window.WebGLRenderingContext) {\r\n    showLink(GET_A_WEBGL_BROWSER);\r\n    return null;\r\n  }\r\n\r\n  var context = create3DContext(canvas, opt_attribs);\r\n  if (!context) {\r\n    showLink(OTHER_PROBLEM);\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {!Canvas} canvas The canvas tag to get context\r\n *     from. If one is not passed in one will be created.\r\n * @return {!WebGLContext} The created context.\r\n */\r\nvar create3DContext = function(canvas, opt_attribs) {\r\n  var names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n  var context = null;\r\n  for (var ii = 0; ii < names.length; ++ii) {\r\n    try {\r\n      context = canvas.getContext(names[ii], opt_attribs);\r\n    } catch(e) {}\r\n    if (context) {\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n}\r\n\r\nreturn {\r\n  create3DContext: create3DContext,\r\n  setupWebGL: setupWebGL\r\n};\r\n}();\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser way.\r\n */\r\nwindow.requestAnimFrame = (function() {\r\n  return window.requestAnimationFrame ||\r\n         window.webkitRequestAnimationFrame ||\r\n         window.mozRequestAnimationFrame ||\r\n         window.oRequestAnimationFrame ||\r\n         window.msRequestAnimationFrame ||\r\n         function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\r\n           window.setTimeout(callback, 1000/60);\r\n         };\r\n})();","export const colorPickerShaders = {\r\n    vertexShader: `\r\n        attribute vec4 vPosition;\r\n        attribute vec4 vColor;\r\n    \r\n        varying vec4 fColor;\r\n    \r\n        void\r\n        main()\r\n        {\r\n            gl_Position = vPosition;\r\n            fColor = vColor;\r\n        }\r\n    `,\r\n    fragmentShader: `\r\n        precision mediump float;\r\n    \r\n        varying vec4 fColor;\r\n        void\r\n        main()\r\n        {\r\n            gl_FragColor = fColor;\r\n        }\r\n    `,\r\n}\r\n\r\nexport const brushShaders = {\r\n    vertexShader: `\r\n        attribute vec4 vPosition;\r\n        attribute vec4 vColor;\r\n        attribute float vBrushSize;\r\n        attribute vec4 vBindingRect; // xywh\r\n        \r\n        varying vec4 fColor;\r\n        varying vec4 fBindingRect;\r\n        \r\n        void\r\n        main()\r\n        {\r\n            gl_Position = vPosition;\r\n            fColor = vColor;\r\n            fBindingRect = vBindingRect;\r\n            gl_PointSize = vBrushSize;\r\n        }\r\n    `,\r\n    fragmentShader: `\r\n        // src = https://www.desultoryquest.com/blog/drawing-anti-aliased-circular-points-using-opengl-slash-webgl/\r\n        precision mediump float;\r\n\r\n        varying vec4 fColor;\r\n        varying vec4 fBindingRect;\r\n\r\n        void\r\n        main()\r\n        {\r\n            float r = 0.0, delta = 0.0, alpha = 1.0;\r\n            vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n            r = dot(cxy, cxy);\r\n            if (r > 1.0) {\r\n                discard;\r\n            }\r\n\r\n            if (\r\n                gl_FragCoord.x > fBindingRect.x && gl_FragCoord.x < fBindingRect.x + fBindingRect.z \r\n                && gl_FragCoord.y > fBindingRect.y && gl_FragCoord.y < fBindingRect.y + fBindingRect.w\r\n            ) {\r\n                gl_FragColor = fColor * (alpha);\r\n            } else {\r\n                discard;\r\n            }\r\n        }    \r\n    `,\r\n}","/**\r\n * A wrapper for passing an attribute buffer to vertiex shader\r\n * @param gl \r\n * @param program \r\n * @param attributeName \r\n * @param buffer \r\n * @param size \r\n * @param vSize \r\n * @param type \r\n */\r\nexport function addAttribute(gl: WebGLRenderingContext, program: any, attributeName: string, buffer: WebGLBuffer, size: number, vSize: number, type: number) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, 4 * vSize * size, gl.STATIC_DRAW);\r\n\r\n    let attributePos = gl.getAttribLocation(program, attributeName);\r\n    gl.vertexAttribPointer(attributePos, vSize, type, false, 0, 0);\r\n    gl.enableVertexAttribArray(attributePos);\r\n}\r\n\r\n/**\r\n * Src = https://convertingcolors.com/blog/article/convert_hex_to_rgb_with_javascript.html\r\n */\r\nexport function convertToRGB(hexColor: string) {\r\n    if (hexColor.length != 6) {\r\n        throw \"Only six-digit hex colors are allowed.\";\r\n    }\r\n\r\n    var aRgbHex = hexColor.match(/.{1,2}/g);\r\n    if (!aRgbHex)\r\n        throw new Error('Corrupt hex');\r\n\r\n    var aRgb = [\r\n        parseInt(aRgbHex[0], 16),\r\n        parseInt(aRgbHex[1], 16),\r\n        parseInt(aRgbHex[2], 16)\r\n    ];\r\n    return aRgb;\r\n}\r\n\r\n/**\r\n * src = https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n * @param r \r\n * @param g \r\n * @param b \r\n * @returns \r\n */\r\nexport function convertToHex(color: number[]) {\r\n    return ('#' + color.map(x => {\r\n        const hex = x.toString(16)\r\n        return hex.length === 1 ? '0' + hex : hex\r\n    }).join(''));\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Grid, Card, CardHeader, CardContent, Button } from '@mui/material';\r\nimport * as MV from '../Common/MV';\r\nimport * as INIT from '../Common/initShaders';\r\nimport * as UTILS from '../Common/webgl-utils';\r\n\r\nimport { colorPickerShaders } from '../shaders';\r\nimport { StateManager } from \"../util/StateManager\";\r\nimport { addAttribute, convertToRGB } from '../util/webglHelpers';\r\nimport Point2D from \"../util/Point2D\";\r\n\r\nconst colors = [\r\n    MV.vec4(0.0, 0.0, 0.0, 1.0),  // black\r\n    MV.vec4(1.0, 0.0, 0.0, 1.0),  // red\r\n    MV.vec4(1.0, 1.0, 0.0, 1.0),  // yellow\r\n    MV.vec4(0.0, 1.0, 0.0, 1.0),  // green\r\n    MV.vec4(0.0, 1.0, 1.0, 1.0),  // cyan\r\n    MV.vec4(0.0, 0.0, 1.0, 1.0),  // blue\r\n    MV.vec4(1.0, 0.0, 1.0, 1.0),  // magenta\r\n    MV.vec4(1.0, 1.0, 1.0, 1.0)   // white\r\n];\r\n\r\nfunction PickerCircle() {\r\n    const [pickerPos, setPickerPos] = useState({ x: -100, y: -100 });\r\n    StateManager.getInstance().subscribe('color-picker-pos', () => {\r\n        const newPickerPos = StateManager.getInstance().getState('color-picker-pos');\r\n        if (newPickerPos)\r\n            setPickerPos(newPickerPos);\r\n    });\r\n    return <svg id={'selector-circle'} height=\"10\" width=\"10\" style={{ position: 'absolute', top: pickerPos.y - 5, left: pickerPos.x - 5 }}>\r\n        <circle cx=\"5\" cy=\"5\" r=\"4\" stroke=\"black\" stroke-width=\"1\" fill-opacity={0} />\r\n    </svg>;\r\n}\r\n\r\nexport default function ColorPicker() {\r\n    StateManager.getInstance().setState('hue-picked', [0, 1, 1, 1]);\r\n    StateManager.getInstance().setState('hue-pos', 0.5);\r\n\r\n    useEffect(initSaturationCanvas);\r\n    useEffect(initHueCanvas);\r\n    const preferredColors = ['#41b96c', '#06c1d9', '#fed37a', '#e45b06', '#06486c', '#534430', '#eb4956', '#b838ed'];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader title={'Color Picker'} titleTypographyProps={{ variant: 'body2', align: 'center', color: 'common.white' }} style={{ backgroundColor: '#323638' }} />\r\n                <CardContent style={{ backgroundColor: '#3b4245' }}>\r\n                    <canvas id={'saturation-canvas'} />\r\n                    <PickerCircle />\r\n                    <canvas id={'hue-canvas'} style={{ height: 25, width: 300, paddingBottom: 20 }} />\r\n                    <Grid container rowSpacing={1} columns={{ xs: 12, sm: 12, md: 12 }} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                        {\r\n                            preferredColors.map((prefColor) => {\r\n                                return (\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Button\r\n                                            id={prefColor}\r\n                                            variant=\"contained\"\r\n                                            style={{\r\n                                                borderRadius: 100,\r\n                                                backgroundColor: prefColor,\r\n                                                padding: \"10px 20px\",\r\n                                            }}\r\n                                            onClick={handlePreferredColorsButtonEvent}\r\n                                        />\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction handlePreferredColorsButtonEvent(event: any) {\r\n    const color = convertToRGB(event.target.id.substr(1));\r\n    StateManager.getInstance().setState('picked-color', [...color.map(cc => cc / 255), 1]);\r\n}\r\n\r\nfunction initHueCanvas() {\r\n    /***** Init WebGL context *****/\r\n    const hueCanvas: any = document.getElementById('hue-canvas');\r\n    const saturationCanvas: any = document.getElementById('saturation-canvas');\r\n    if (!hueCanvas || !saturationCanvas) throw new Error('Couldn\\'t find the canvas');\r\n\r\n    let gl: WebGLRenderingContext = UTILS.WebGLUtils.setupWebGL(hueCanvas, { preserveDrawingBuffer: true });\r\n    if (!gl) throw new Error(\"WebGL isn't available\");\r\n\r\n    gl.viewport(0, 0, hueCanvas.width, hueCanvas.height);\r\n    gl.clearColor(254 / 255, 254 / 255, 204 / 255, 1.0);\r\n\r\n    let program = INIT.initShaders(gl, colorPickerShaders.vertexShader, colorPickerShaders.fragmentShader);\r\n    gl.useProgram(program);\r\n\r\n    let vertexBuffer = gl.createBuffer();\r\n    if (vertexBuffer)\r\n        addAttribute(gl, program, 'vPosition', vertexBuffer, 14, 2, gl.FLOAT);\r\n\r\n    let colorBuffer = gl.createBuffer();\r\n    if (colorBuffer)\r\n        addAttribute(gl, program, 'vColor', colorBuffer, 14, 4, gl.FLOAT);\r\n\r\n    /***** Init events *****/\r\n    let pick = false;\r\n    hueCanvas.addEventListener('mousedown', () => {\r\n        pick = true;\r\n    });\r\n\r\n    hueCanvas.addEventListener('mouseup', () => { pick = false });\r\n    hueCanvas.addEventListener(\"mousemove\", (event: any) => { if (pick) pickColor({ x: event.clientX, y: event.clientY }) });\r\n    hueCanvas.addEventListener('click', (event: any) => { pickColor({ x: event.clientX, y: event.clientY }) });\r\n\r\n    /***** Setup the hue colors *****/\r\n    const rects = [];\r\n    const rectsColors = [];\r\n    for (let w = -1, i = 0; w < 1; w += 2 / 6, i++) {\r\n        rects.push(MV.vec2(w, 1), MV.vec2(w, -1));\r\n        rectsColors.push(MV.vec4(colors[i % 6 + 1]), MV.vec4(colors[i % 6 + 1]));\r\n    }\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, MV.flatten(rects));\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, MV.flatten(rectsColors));\r\n\r\n    /***** Start the rendering loop *****/\r\n    render();\r\n\r\n    /***** Inner functions defenitions *****/\r\n    /**\r\n     * Based on the click posotion, a hue value is selected\r\n    */\r\n    function pickColor(pos: Point2D) {\r\n        var clickedPos = MV.vec2(pos.x - hueCanvas.offsetLeft,\r\n            hueCanvas.height - pos.y + hueCanvas.offsetTop);\r\n\r\n        let pixel = new Uint8Array(4);\r\n        gl.readPixels(clickedPos[0], clickedPos[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n        StateManager.getInstance().setState('hue-picked', [pixel[0] / 255, pixel[1] / 255, pixel[2] / 255, pixel[3] / 255]);\r\n        StateManager.getInstance().setState('hue-pos', clickedPos[0] / hueCanvas.width);\r\n        StateManager.getInstance().setState('picked-color', [pixel[0] / 255, pixel[1] / 255, pixel[2] / 255, pixel[3] / 255]);\r\n        StateManager.getInstance().setState('color-picker-pos', { x: pos.x, y: saturationCanvas.offsetTop + saturationCanvas.height })\r\n    }\r\n\r\n    function render() {\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 14);\r\n    };\r\n}\r\n\r\nfunction initSaturationCanvas() {\r\n    /***** Init WebGL context *****/\r\n    const saturationCanvas: any = document.getElementById('saturation-canvas');\r\n    const selectorCircle: any = document.getElementById('selector-circle');\r\n    if (!saturationCanvas || !selectorCircle) throw new Error('Couldn\\'t find the canvas');\r\n\r\n    let gl: WebGLRenderingContext = UTILS.WebGLUtils.setupWebGL(saturationCanvas, { preserveDrawingBuffer: true });\r\n    if (!gl) throw new Error(\"WebGL isn't available\");\r\n\r\n    gl.viewport(0, 0, saturationCanvas.width, saturationCanvas.height);\r\n    gl.clearColor(59 / 255, 66 / 255, 69 / 255, 1.0);\r\n\r\n    let program = INIT.initShaders(gl, colorPickerShaders.vertexShader, colorPickerShaders.fragmentShader);\r\n    gl.useProgram(program);\r\n\r\n    let vertexBuffer = gl.createBuffer();\r\n    if (vertexBuffer)\r\n        addAttribute(gl, program, 'vPosition', vertexBuffer, 3, 2, gl.FLOAT);\r\n\r\n    let colorBuffer = gl.createBuffer();\r\n    if (colorBuffer)\r\n        addAttribute(gl, program, 'vColor', colorBuffer, 3, 4, gl.FLOAT);\r\n\r\n    /***** Init events *****/\r\n    let pick = false;\r\n    saturationCanvas.addEventListener('mousedown', () => { pick = true });\r\n    saturationCanvas.addEventListener('mouseup', () => { pick = false });\r\n    saturationCanvas.addEventListener('mousemove', (event: any) => { if (pick) pickTheColor({ x: event.clientX, y: event.clientY }) });\r\n    saturationCanvas.addEventListener('click', (event: any) => {pickTheColor({ x: event.clientX, y: event.clientY })});\r\n\r\n    selectorCircle.addEventListener('mousedown', () => { pick = true });\r\n    selectorCircle.addEventListener('mouseup', () => { pick = false });\r\n    selectorCircle.addEventListener('mousemove', (event: any) => { if (pick) pickTheColor({ x: event.clientX, y: event.clientY }) });\r\n    selectorCircle.addEventListener('click', (event: any) => {pickTheColor({ x: event.clientX, y: event.clientY })})\r\n\r\n    /***** Start the rendering loop *****/\r\n    StateManager.getInstance().subscribe('hue-picked', render);\r\n    StateManager.getInstance().subscribe('hue-pos', render);\r\n    render();\r\n\r\n    /***** Inner functions defenitions *****/\r\n    /**\r\n     * Based on the click position, a color will be selected\r\n     * @param event \r\n     */\r\n    function pickTheColor(pos: Point2D) {\r\n        var clickedPos = MV.vec2(pos.x - saturationCanvas.offsetLeft,\r\n            saturationCanvas.height - pos.y + saturationCanvas.offsetTop);\r\n\r\n        let pixel = new Uint8Array(4);\r\n        gl.readPixels(clickedPos[0], clickedPos[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n        StateManager.getInstance().setState('picked-color', [pixel[0] / 255, pixel[1] / 255, pixel[2] / 255, pixel[3] / 255]);\r\n        StateManager.getInstance().setState('color-picker-pos', { x: pos.x, y: pos.y })\r\n    }\r\n\r\n    function render() {\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        let rectColors = [MV.vec4(colors[7]), MV.vec4(colors[0]), StateManager.getInstance().getState('hue-picked')];\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, MV.flatten(rectColors));\r\n\r\n        let rect = [MV.vec2(-1, 1), MV.vec2(1, 1), MV.vec2(StateManager.getInstance().getState('hue-pos') * 2 - 1, -1)];\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, MV.flatten(rect));\r\n\r\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 3);\r\n    }\r\n}\r\n","import { useState } from 'react';\r\nimport { Grid, Card, CardHeader, CardContent, Button, Box, Divider, Slider } from '@mui/material';\r\nimport BrushOutlinedIcon from '@mui/icons-material/BrushOutlined';\r\nimport CheckBoxOutlineBlankOutlinedIcon from '@mui/icons-material/CheckBoxOutlineBlankOutlined';\r\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\r\nimport ChangeHistoryOutlinedIcon from '@mui/icons-material/ChangeHistoryOutlined';\r\nimport SelectAllOutlinedIcon from '@mui/icons-material/SelectAllOutlined';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\n\r\nimport { convertToHex } from '../util/webglHelpers';\r\nimport { StateManager } from '../util/StateManager';\r\n\r\nexport default function ToolBox() {\r\n    const [pickedColor, setPickedColor] = useState('#000000');\r\n    const [brushSize, setBrushSize] = useState(0);\r\n    const [selectedTool, setSelectedTool] = useState('brush');\r\n\r\n    StateManager.getInstance().subscribe('picked-color', () => {\r\n        const initPickedColor: number[] = StateManager.getInstance().getState('picked-color');\r\n        setPickedColor(convertToHex(initPickedColor.map(color => color * 255)));\r\n    });\r\n\r\n    StateManager.getInstance().subscribe('selected-tool', () => {\r\n        setSelectedTool(StateManager.getInstance().getState('selected-tool'));\r\n    });\r\n\r\n    StateManager.getInstance().subscribe('brush-size', () => {\r\n        setBrushSize(StateManager.getInstance().getState('brush-size'));\r\n    });\r\n\r\n    function handleBrushSizeChange(newSize: number) {\r\n        StateManager.getInstance().setState('brush-size', newSize);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title={'Tool Box'} titleTypographyProps={{ variant: 'body2', align: 'center', color: 'common.white' }} style={{ backgroundColor: '#323638' }} />\r\n            <CardContent style={{ backgroundColor: '#3b4245' }}>\r\n                <Box pb={2}>\r\n                    <Grid container rowSpacing={1} columns={{ xs: 12, sm: 12, md: 12 }} >\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <Button\r\n                                variant={selectedTool === 'brush' ? 'outlined' : \"text\"}\r\n                                onClick={() => { StateManager.getInstance().setState('selected-tool', 'brush') }}\r\n                            >\r\n                                <BrushOutlinedIcon sx={{ color: 'white' }} />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <Button\r\n                                variant={selectedTool === 'eraser' ? 'outlined' : \"text\"}\r\n                                onClick={() => { StateManager.getInstance().setState('selected-tool', 'eraser') }}\r\n                            >\r\n                                <DriveFileRenameOutlineIcon sx={{ color: 'white' }} />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <Button\r\n                                variant={selectedTool === 'crop' ? 'outlined' : \"text\"}\r\n                                onClick={() => { StateManager.getInstance().setState('selected-tool', 'crop') }}\r\n                            >\r\n                                <SelectAllOutlinedIcon sx={{ color: 'white' }} />\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Divider />\r\n                <Box pt={2}>\r\n                    <Grid container rowSpacing={1} columns={{ xs: 12, sm: 12, md: 12 }} >\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <Button\r\n                                variant={selectedTool === 'rect' ? 'outlined' : \"text\"}\r\n                                onClick={() => { StateManager.getInstance().setState('selected-tool', 'rect') }}\r\n                            >\r\n                                <CheckBoxOutlineBlankOutlinedIcon sx={{ color: 'white' }} />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <Button\r\n                                variant={selectedTool === 'circle' ? 'outlined' : \"text\"}\r\n                                onClick={() => { StateManager.getInstance().setState('selected-tool', 'circle') }}\r\n                            >\r\n                                <CircleOutlinedIcon sx={{ color: 'white' }} />\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <Button\r\n                                variant={selectedTool === 'triangle' ? 'outlined' : \"text\"}\r\n                                onClick={() => { StateManager.getInstance().setState('selected-tool', 'triangle') }}\r\n                            >\r\n                                <ChangeHistoryOutlinedIcon sx={{ color: 'white' }} />\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Divider />\r\n                <Slider\r\n                    size=\"small\"\r\n                    value={brushSize}\r\n                    min={2}\r\n                    aria-label=\"Small\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    onChange={(event: any) => { handleBrushSizeChange(event.target.value) }}\r\n                />\r\n                <Divider />\r\n                <Box mt={2} sx={{ width: '100%', height: 40, backgroundColor: pickedColor, border: 1 }}>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import { Card, CardContent } from '@mui/material';\r\nimport { useEffect, useState } from \"react\";\r\nimport * as MV from '../Common/MV';\r\nimport * as INIT from '../Common/initShaders';\r\nimport * as UTILS from '../Common/webgl-utils';\r\n\r\nimport { brushShaders } from '../shaders';\r\nimport { StateManager } from \"../util/StateManager\";\r\nimport { addAttribute } from \"../util/webglHelpers\";\r\nimport { Layer, Shape } from \"./Layers\";\r\nimport Point2D from '../util/Point2D';\r\nimport Size2D from '../util/Size2D';\r\n\r\n// Global variables\r\nlet PAINT_CANVAS: any;\r\nlet PAINT_CANVAS_GL: WebGLRenderingContext;\r\nlet WEBGL_PROGRAM: any;\r\nlet vertexBuffer: WebGLBuffer | null;\r\nlet brushSizeBuffer: WebGLBuffer | null;\r\nlet bindingRectBuffer: WebGLBuffer | null;\r\nlet colorBuffer: WebGLBuffer | null;\r\n\r\nfunction SelectionRect() {\r\n    const [selectionRectWidth, setSelectionRectWidth] = useState(0);\r\n    const [selectionRectHeight, setSelectionRectHeight] = useState(0);\r\n    const [selectionRectX, setSelectionRectX] = useState(0);\r\n    const [selectionRectY, setSelectionRectY] = useState(0);\r\n\r\n    StateManager.getInstance().subscribe('selection-rect-pos', () => {\r\n        handlePropChange();\r\n    });\r\n\r\n    StateManager.getInstance().subscribe('selection-rect-size', () => {\r\n        handlePropChange();\r\n    });\r\n\r\n    function handlePropChange() {\r\n        const newRectSize = StateManager.getInstance().getState('selection-rect-size');\r\n        const newRectPos = StateManager.getInstance().getState('selection-rect-pos');\r\n\r\n        if (!newRectPos || !newRectSize)\r\n            return;\r\n\r\n        if (newRectSize && newRectSize.w < 0 && newRectSize.h < 0) {\r\n            setSelectionRectX(newRectPos.x + newRectSize.w);\r\n            setSelectionRectY(newRectPos.y + newRectSize.h);\r\n        } else if (newRectSize && newRectSize.w < 0) {\r\n            setSelectionRectX(newRectPos.x + newRectSize.w);\r\n            setSelectionRectY(newRectPos.y);\r\n        } else if (newRectSize && newRectSize.h < 0) {\r\n            setSelectionRectX(newRectPos.x);\r\n            setSelectionRectY(newRectPos.y + newRectSize.h);\r\n        } else {\r\n            setSelectionRectX(newRectPos.x);\r\n            setSelectionRectY(newRectPos.y);\r\n        }\r\n\r\n        if (newRectSize) {\r\n            setSelectionRectHeight(Math.abs(newRectSize.h));\r\n            setSelectionRectWidth(Math.abs(newRectSize.w));\r\n        }\r\n    }\r\n\r\n    return <svg id={'selection-rect'} height={selectionRectHeight} width={selectionRectWidth} style={{ position: 'absolute', top: selectionRectY, left: selectionRectX }}>\r\n        <rect x=\"1\" y=\"1\" height={selectionRectHeight - 2} width={selectionRectWidth - 2} style={{ stroke: '#000000', strokeWidth: '1', strokeDasharray: '2 2', fill: 'none' }} />\r\n    </svg>;\r\n}\r\n\r\nexport default function PaintArea() {\r\n    useEffect(initPaintCanvas);\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent style={{ backgroundColor: '#3b4245' }}>\r\n                <canvas id={'macanvas'} width={'520'} height={'550'} />\r\n                <SelectionRect />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n/**\r\n * Initializes webgl for the main painiting PAINT_CANVAS\r\n */\r\nfunction initPaintCanvas() {\r\n    PAINT_CANVAS = document.getElementById('macanvas');\r\n    const selectionRectElement = document.getElementById('selection-rect');\r\n    if (!PAINT_CANVAS || !selectionRectElement)\r\n        throw new Error('Couldn\\'t create the PAINT_CANVAS');\r\n\r\n    PAINT_CANVAS_GL = UTILS.WebGLUtils.setupWebGL(PAINT_CANVAS, null);\r\n    if (!PAINT_CANVAS_GL) { alert(\"WebGL isn't available\"); }\r\n\r\n    let maxNumVertices = 100000;\r\n    StateManager.getInstance().setState('redraw', false);\r\n    StateManager.getInstance().setState('newLine', true);\r\n    StateManager.getInstance().setState('selection-start-coords', { x: 0, y: 0 });\r\n    StateManager.getInstance().setState('selection-end-coords', { x: 0, y: 0 });\r\n    StateManager.getInstance().setState('selection-top-left-coords', { x: 0, y: 0 });\r\n    StateManager.getInstance().setState('selection-bottom-right-coords', { x: 0, y: 0 });\r\n    StateManager.getInstance().setState('cropping', false);\r\n    StateManager.getInstance().setState('selection-rect-pos', { x: 0, y: 0 });\r\n    StateManager.getInstance().setState('selection-rect-size', { w: 0, h: 0 });\r\n\r\n    PAINT_CANVAS_GL.viewport(0, 0, PAINT_CANVAS.clientWidth, PAINT_CANVAS.clientHeight);\r\n    PAINT_CANVAS_GL.clearColor(0.8, 0.8, 0.8, 1.0);\r\n\r\n    /*****  Load shaders and initialize attribute buffers *****/\r\n    WEBGL_PROGRAM = INIT.initShaders(PAINT_CANVAS_GL, brushShaders.vertexShader, brushShaders.fragmentShader);\r\n    PAINT_CANVAS_GL.useProgram(WEBGL_PROGRAM);\r\n    PAINT_CANVAS_GL.enable(PAINT_CANVAS_GL.DEPTH_TEST);\r\n\r\n    vertexBuffer = PAINT_CANVAS_GL.createBuffer();\r\n    if (vertexBuffer)\r\n        addAttribute(PAINT_CANVAS_GL, WEBGL_PROGRAM, 'vPosition', vertexBuffer, maxNumVertices, 3, PAINT_CANVAS_GL.FLOAT);\r\n\r\n    brushSizeBuffer = PAINT_CANVAS_GL.createBuffer();\r\n    if (brushSizeBuffer)\r\n        addAttribute(PAINT_CANVAS_GL, WEBGL_PROGRAM, 'vBrushSize', brushSizeBuffer, maxNumVertices, 1, PAINT_CANVAS_GL.FLOAT);\r\n\r\n    bindingRectBuffer = PAINT_CANVAS_GL.createBuffer();\r\n    if (bindingRectBuffer)\r\n        addAttribute(PAINT_CANVAS_GL, WEBGL_PROGRAM, 'vBindingRect', bindingRectBuffer, maxNumVertices, 4, PAINT_CANVAS_GL.FLOAT);\r\n\r\n    colorBuffer = PAINT_CANVAS_GL.createBuffer();\r\n    if (colorBuffer)\r\n        addAttribute(PAINT_CANVAS_GL, WEBGL_PROGRAM, 'vColor', colorBuffer, maxNumVertices, 4, PAINT_CANVAS_GL.FLOAT);\r\n\r\n    /*****  Initialize event listenters *****/\r\n    PAINT_CANVAS.addEventListener(\"mousedown\", handleMouseDown);\r\n    selectionRectElement.addEventListener(\"mousedown\", handleMouseDown);\r\n    PAINT_CANVAS.addEventListener(\"mouseup\", handleMouseUp);\r\n    PAINT_CANVAS.addEventListener(\"mousemove\", handleMouseMove);\r\n    selectionRectElement.addEventListener(\"mouseup\", handleMouseUp);\r\n    selectionRectElement.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    document.addEventListener('keyup', (event: any) => {\r\n        const cropping = StateManager.getInstance().getState('cropping');\r\n        const code = event.code;\r\n        if (code === 'Escape') {\r\n            if (cropping) {\r\n                StateManager.getInstance().setState('cropping', false);\r\n                confirmCopy();\r\n                updateTimeline();\r\n            }\r\n        }\r\n    });\r\n\r\n    /***** Start the rendering loop *****/\r\n    render();\r\n}\r\n\r\n/**\r\n * This function will be called on every fram to calculate what to draw to the frame buffer\r\n */\r\nfunction render() {\r\n    PAINT_CANVAS_GL.clear(PAINT_CANVAS_GL.COLOR_BUFFER_BIT);\r\n    PAINT_CANVAS_GL.clear(PAINT_CANVAS_GL.DEPTH_BUFFER_BIT);\r\n    PAINT_CANVAS_GL.useProgram(WEBGL_PROGRAM);\r\n\r\n    const layers = StateManager.getInstance().getState('layers');\r\n    const croppingLayer = StateManager.getInstance().getState('cropping-layer');\r\n    let i = 0;\r\n    let lastRenderingEndIndex = 0;\r\n\r\n    croppingLayer.shapes.forEach((shape: Shape, shapeIndex: number) => {\r\n        PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, vertexBuffer);\r\n        for (let k = 0; k < shape.vertexData.length; k += 2) {\r\n            PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, (4 * 3 * i) + ((k / 2) * 3 * 4), MV.flatten([shape.vertexData.slice(k, k + 2), 100 / 1000]));\r\n        }\r\n\r\n        PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, brushSizeBuffer);\r\n        PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, 4 * i, MV.flatten([...shape.brushSize]));\r\n\r\n        PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, bindingRectBuffer);\r\n        PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, 4 * 4 * i, MV.flatten(shape.boundingRectData));\r\n\r\n        PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, colorBuffer);\r\n        PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, 4 * 4 * i, MV.flatten(shape.colorData));\r\n\r\n        if (shape.type === 'point') {\r\n            i++;\r\n        } else if (shape.type === 'nofill-rectangle' || shape.type === 'rectangle') {\r\n            i += 4;\r\n        } else if (shape.type === 'nofill-triangle' || shape.type === 'triangle') {\r\n            i += 3;\r\n        } else if (shape.type === 'nofill-elipse' || shape.type === 'elipse') {\r\n            i += 32;\r\n        }\r\n\r\n        const nextShapeType = croppingLayer.shapes[shapeIndex + 1]?.type;\r\n        if (nextShapeType !== shape.type || shapeIndex === croppingLayer.shapes.length - 1) {\r\n            if (shape.type === 'point') {\r\n                PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.POINTS, lastRenderingEndIndex, (i - 1 - lastRenderingEndIndex));\r\n            } else if (shape.type === 'nofill-rectangle') {\r\n                const numRectangles = (i - lastRenderingEndIndex) / 4;\r\n                for (let r = 0; r < numRectangles; r++) {\r\n                    PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.LINE_LOOP, lastRenderingEndIndex + 4 * r, 4);\r\n                }\r\n            } else if (shape.type === 'rectangle') {\r\n                const numRectangles = (i - lastRenderingEndIndex) / 4;\r\n                for (let r = 0; r < numRectangles; r++) {\r\n                    PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.TRIANGLE_FAN, lastRenderingEndIndex + 4 * r, 4);\r\n                }\r\n            } else if (shape.type === 'nofill-triangle') {\r\n                const numTriangles = (i - lastRenderingEndIndex) / 3;\r\n                for (let t = 0; t < numTriangles; t++) {\r\n                    PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.LINE_LOOP, lastRenderingEndIndex + 3 * t, 3);\r\n                }\r\n            } else if (shape.type === 'triangle') {\r\n                const numTriangles = (i - lastRenderingEndIndex) / 3;\r\n                for (let t = 0; t < numTriangles; t++) {\r\n                    PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.TRIANGLES, lastRenderingEndIndex + 3 * t, 3);\r\n                }\r\n            } else if (shape.type === 'nofill-elipse') {\r\n                const numElipses = (i - lastRenderingEndIndex) / 32;\r\n                for (let t = 0; t < numElipses; t++) {\r\n                    PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.LINE_LOOP, lastRenderingEndIndex + 32 * t, 32);\r\n                }\r\n            } else if (shape.type === 'elipse') {\r\n                const numElipses = (i - lastRenderingEndIndex) / 32;\r\n                for (let t = 0; t < numElipses; t++) {\r\n                    PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.TRIANGLE_FAN, lastRenderingEndIndex + 32 * t, 32);\r\n                }\r\n            }\r\n\r\n            lastRenderingEndIndex = i;\r\n        }\r\n    });\r\n\r\n    if (layers) {\r\n        layers.forEach((layer: Layer, layerIndex: number) => {\r\n            if (!layer.visible)\r\n                return;\r\n\r\n            layer.shapes.forEach((shape, shapeIndex) => {\r\n                PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, vertexBuffer);\r\n                for (let k = 0; k < shape.vertexData.length; k += 2) {\r\n                    PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, (4 * 3 * i) + ((k / 2) * 3 * 4), MV.flatten([shape.vertexData.slice(k, k + 2), layerIndex / 1000]));\r\n                }\r\n\r\n                PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, brushSizeBuffer);\r\n                PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, 4 * i, MV.flatten([...shape.brushSize]));\r\n\r\n                PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, bindingRectBuffer);\r\n                PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, 4 * 4 * i, MV.flatten(shape.boundingRectData));\r\n\r\n                PAINT_CANVAS_GL.bindBuffer(PAINT_CANVAS_GL.ARRAY_BUFFER, colorBuffer);\r\n                PAINT_CANVAS_GL.bufferSubData(PAINT_CANVAS_GL.ARRAY_BUFFER, 4 * 4 * i, MV.flatten(shape.colorData));\r\n\r\n                if (shape.type === 'point') {\r\n                    i++;\r\n                } else if (shape.type === 'nofill-rectangle' || shape.type === 'rectangle') {\r\n                    i += 4;\r\n                } else if (shape.type === 'nofill-triangle' || shape.type === 'triangle') {\r\n                    i += 3;\r\n                } else if (shape.type === 'nofill-elipse' || shape.type === 'elipse') {\r\n                    i += 32;\r\n                }\r\n\r\n                const nextShapeType = layer.shapes[shapeIndex + 1]?.type;\r\n                if (nextShapeType !== shape.type || shapeIndex === layer.shapes.length - 1) {\r\n                    if (shape.type === 'point') {\r\n                        PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.POINTS, lastRenderingEndIndex, (i - 1 - lastRenderingEndIndex));\r\n                    } else if (shape.type === 'nofill-rectangle') {\r\n                        const numRectangles = (i - lastRenderingEndIndex) / 4;\r\n                        for (let r = 0; r < numRectangles; r++) {\r\n                            PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.LINE_LOOP, lastRenderingEndIndex + 4 * r, 4);\r\n                        }\r\n                    } else if (shape.type === 'rectangle') {\r\n                        const numRectangles = (i - lastRenderingEndIndex) / 4;\r\n                        for (let r = 0; r < numRectangles; r++) {\r\n                            PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.TRIANGLE_FAN, lastRenderingEndIndex + 4 * r, 4);\r\n                        }\r\n                    } else if (shape.type === 'nofill-triangle') {\r\n                        const numTriangles = (i - lastRenderingEndIndex) / 3;\r\n                        for (let t = 0; t < numTriangles; t++) {\r\n                            PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.LINE_LOOP, lastRenderingEndIndex + 3 * t, 3);\r\n                        }\r\n                    } else if (shape.type === 'triangle') {\r\n                        const numTriangles = (i - lastRenderingEndIndex) / 3;\r\n                        for (let t = 0; t < numTriangles; t++) {\r\n                            PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.TRIANGLES, lastRenderingEndIndex + 3 * t, 3);\r\n                        }\r\n                    } else if (shape.type === 'nofill-elipse') {\r\n                        const numElipses = (i - lastRenderingEndIndex) / 32;\r\n                        for (let t = 0; t < numElipses; t++) {\r\n                            PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.LINE_LOOP, lastRenderingEndIndex + 32 * t, 32);\r\n                        }\r\n                    } else if (shape.type === 'elipse') {\r\n                        const numElipses = (i - lastRenderingEndIndex) / 32;\r\n                        for (let t = 0; t < numElipses; t++) {\r\n                            PAINT_CANVAS_GL.drawArrays(PAINT_CANVAS_GL.TRIANGLE_FAN, lastRenderingEndIndex + 32 * t, 32);\r\n                        }\r\n                    }\r\n\r\n                    lastRenderingEndIndex = i;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n}\r\n\r\n/**\r\n * \r\n */\r\nfunction handleMouseUp() {\r\n    const usedTool = StateManager.getInstance().getState('selected-tool');\r\n    const cropping = StateManager.getInstance().getState('cropping');\r\n\r\n    StateManager.getInstance().setState('redraw', false);\r\n    if (usedTool === 'brush') {\r\n        updateTimeline();\r\n    } else if (usedTool === 'eraser') {\r\n        updateTimeline();\r\n    } else if (usedTool === 'crop') {\r\n        if (!cropping) {\r\n            copySelectedRegion();\r\n            StateManager.getInstance().setState('cropping', true);\r\n        }\r\n    } else if (usedTool === 'rect') {\r\n        finalizeRectangle();\r\n        updateTimeline();\r\n    } else if (usedTool === 'circle') {\r\n        finalizeElipse();\r\n        updateTimeline();\r\n    } else if (usedTool === 'triangle') {\r\n        finalizeTriangle();\r\n        updateTimeline();\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param event \r\n */\r\nfunction handleMouseDown(event: any) {\r\n    const usedTool = StateManager.getInstance().getState('selected-tool');\r\n    const cropping = StateManager.getInstance().getState('cropping');\r\n\r\n    StateManager.getInstance().setState('redraw', true);\r\n    StateManager.getInstance().setState('new-line', true);\r\n    if (usedTool === 'brush') {\r\n    } else if (usedTool === 'eraser') {\r\n    } else if (usedTool === 'crop') {\r\n        StateManager.getInstance().setState('selection-start-coords', { x: event.clientX - PAINT_CANVAS.offsetLeft, y: PAINT_CANVAS.height - (event.clientY - PAINT_CANVAS.offsetTop) })\r\n        if (!cropping) {\r\n            StateManager.getInstance().setState('selection-rect-pos', { x: event.clientX, y: event.clientY });\r\n        }\r\n    } else if (usedTool === 'rect') {\r\n        drawRectangle({ x: event.clientX, y: event.clientY }, { w: 0, h: 0 });\r\n    } else if (usedTool === 'circle') {\r\n        drawElipse({ x: event.clientX, y: event.clientY }, { w: 0, h: 0 });\r\n    } else if (usedTool === 'triangle') {\r\n        drawTriangle({ x: event.clientX, y: event.clientY }, { w: 0, h: 0 });\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param event \r\n */\r\nfunction handleMouseMove(event: any) {\r\n    const redraw = StateManager.getInstance().getState('redraw');\r\n    const usedTool = StateManager.getInstance().getState('selected-tool');\r\n    const cropping = StateManager.getInstance().getState('cropping');\r\n    if (redraw) {\r\n        if (usedTool === 'brush') {\r\n            freeDraw({ x: event.clientX, y: event.clientY });\r\n        } else if (usedTool === 'eraser') {\r\n            erase({ x: event.clientX, y: event.clientY });\r\n        } else if (usedTool === 'crop') {\r\n            StateManager.getInstance().setState('selection-end-coords', { x: event.clientX - PAINT_CANVAS.offsetLeft, y: PAINT_CANVAS.height - (event.clientY - PAINT_CANVAS.offsetTop) })\r\n            if (cropping) {\r\n                moveCopiedRegion({ x: event.movementX, y: -event.movementY });\r\n            } else {\r\n                const selectionRectPos1 = StateManager.getInstance().getState('selection-rect-pos');\r\n                const selectionRectPos2 = { x: event.clientX, y: event.clientY };\r\n                StateManager.getInstance().setState('selection-rect-size', {\r\n                    w: selectionRectPos2.x - selectionRectPos1.x,\r\n                    h: selectionRectPos2.y - selectionRectPos1.y\r\n                });\r\n            }\r\n        } else if (usedTool === 'rect') {\r\n            resizeRectangle({ x: event.movementX, y: -event.movementY });\r\n        } else if (usedTool === 'circle') {\r\n            resizeElipse({ x: event.movementX, y: -event.movementY });\r\n        } else if (usedTool === 'triangle') {\r\n            resizeTriangle({ x: event.movementX, y: -event.movementY });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Moves the vertices from the current layer to the temporary crop storage\r\n */\r\nfunction copySelectedRegion(): void {\r\n    // go over the vertices of the current layer\r\n    const selectionRectStartCoords = StateManager.getInstance().getState('selection-start-coords');\r\n    const selectionRectEndCoords = StateManager.getInstance().getState('selection-end-coords');\r\n    const selectionRectTopLeft = StateManager.getInstance().getState('selection-top-left-coords');\r\n    const selectionRectBotRight = StateManager.getInstance().getState('selection-bottom-right-coords');\r\n    const croppingLayer = StateManager.getInstance().getState('cropping-layer');\r\n    const currentLayer = getCurrentLayer();\r\n    if (!currentLayer)\r\n        return;\r\n\r\n    if (selectionRectStartCoords.x < selectionRectEndCoords.x) {\r\n        selectionRectTopLeft.x = selectionRectStartCoords.x;\r\n        selectionRectBotRight.x = selectionRectEndCoords.x;\r\n    } else {\r\n        selectionRectTopLeft.x = selectionRectEndCoords.x;\r\n        selectionRectBotRight.x = selectionRectStartCoords.x;\r\n    }\r\n\r\n    if (selectionRectStartCoords.y > selectionRectEndCoords.y) {\r\n        selectionRectTopLeft.y = selectionRectStartCoords.y;\r\n        selectionRectBotRight.y = selectionRectEndCoords.y;\r\n    } else {\r\n        selectionRectTopLeft.y = selectionRectEndCoords.y;\r\n        selectionRectBotRight.y = selectionRectStartCoords.y;\r\n    }\r\n\r\n    // find the ones that fall in the rectangle starting at \r\n    // selectRectStartCoord and ending at this point\r\n\r\n    const selectedShapes: Shape[] = [];\r\n    currentLayer.shapes.forEach((shape) => {\r\n        if (shape.type === 'point') {\r\n            for (let i = 0; i < shape.vertexData.length; i += 2) {\r\n                const point = MV.vec2(shape.vertexData[i], shape.vertexData[i + 1]);\r\n                if ( // point in bounding rectangle\r\n                    point[0] > ((selectionRectTopLeft.x / PAINT_CANVAS.width) * 2) - 1\r\n                    && point[0] < ((selectionRectBotRight.x / PAINT_CANVAS.width) * 2) - 1\r\n                    && point[1] > ((selectionRectBotRight.y / PAINT_CANVAS.height) * 2) - 1\r\n                    && point[1] < ((selectionRectTopLeft.y / PAINT_CANVAS.height) * 2) - 1\r\n                ) {\r\n                    // Calculating the bounding rectangle of the vertices\r\n                    // this gives the illusion of the line being cropped\r\n                    // without the bounding rect, the copied vertices will\r\n                    // keep their rounded edges even if that falls out of\r\n                    // the copied region.\r\n                    const existingBoundingRect = {\r\n                        x1: shape.boundingRectData[0], // BotLeft\r\n                        y1: shape.boundingRectData[1],\r\n                        x2: shape.boundingRectData[0] + shape.boundingRectData[2], // TopRight\r\n                        y2: shape.boundingRectData[1] + shape.boundingRectData[3],\r\n                    }\r\n\r\n                    const selectionRect = {\r\n                        x1: selectionRectTopLeft.x,\r\n                        y1: selectionRectBotRight.y,\r\n                        x2: selectionRectTopLeft.x + (selectionRectBotRight.x - selectionRectTopLeft.x),\r\n                        y2: selectionRectBotRight.y + (selectionRectTopLeft.y - selectionRectBotRight.y),\r\n                    }\r\n\r\n                    let mostRightX1 = selectionRect.x1 > existingBoundingRect.x1 ? selectionRect.x1 : existingBoundingRect.x1;\r\n                    let mostTopY1 = selectionRect.y1 > existingBoundingRect.y1 ? selectionRect.y1 : existingBoundingRect.y1;\r\n                    let mostLeftX2 = selectionRect.x2 < existingBoundingRect.x2 ? selectionRect.x2 : existingBoundingRect.x2;\r\n                    let mostBottomY2 = selectionRect.y2 < existingBoundingRect.y2 ? selectionRect.y2 : existingBoundingRect.y2;\r\n\r\n                    selectedShapes.push({\r\n                        vertexData: [...shape.vertexData],\r\n                        colorData: [...shape.colorData],\r\n                        brushSize: [...shape.brushSize],\r\n                        boundingRectData: [\r\n                            mostRightX1,\r\n                            mostTopY1,\r\n                            Math.abs(mostLeftX2 - mostRightX1),\r\n                            Math.abs(mostBottomY2 - mostTopY1),\r\n                        ],\r\n                        type: shape.type,\r\n                    });\r\n\r\n                    croppingLayer.shapes = selectedShapes;\r\n                    StateManager.getInstance().setState('cropping-layer', croppingLayer);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Moves the region being cropped with delta\r\n * @param delta the distance the region should more in x and y\r\n * @returns \r\n */\r\nfunction moveCopiedRegion(delta: Point2D) {\r\n    // go over the vertices of the current layer\r\n    const currentLayer = getCurrentLayer();\r\n    const croppingLayer = StateManager.getInstance().getState('cropping-layer');\r\n    if (!currentLayer || !croppingLayer)\r\n        return;\r\n\r\n    croppingLayer.shapes.forEach((shape: Shape) => {\r\n        for (let i = 0; i < shape.vertexData.length; i += 2) {\r\n            shape.vertexData[i] += delta.x / PAINT_CANVAS.width * 2;\r\n            shape.vertexData[i + 1] += delta.y / PAINT_CANVAS.height * 2;\r\n        }\r\n        shape.boundingRectData[0] += delta.x;\r\n        shape.boundingRectData[1] += delta.y;\r\n    });\r\n\r\n    const selectionRectPos = StateManager.getInstance().getState('selection-rect-pos');\r\n    StateManager.getInstance().setState('selection-rect-pos', { x: selectionRectPos.x + delta.x, y: selectionRectPos.y - delta.y })\r\n    StateManager.getInstance().setState('cropping-layer', croppingLayer);\r\n}\r\n\r\n/**\r\n * Moves the selected vertices from the temporary crop storage to the current layer\r\n * The current layer doesn't have to be the same as the layer the vertices were cropped from\r\n * @returns \r\n */\r\nfunction confirmCopy() {\r\n    const currentLayer = getCurrentLayer();\r\n    const croppingLayer = StateManager.getInstance().getState('cropping-layer')\r\n    if (!currentLayer)\r\n        return;\r\n\r\n    currentLayer.shapes.unshift(...croppingLayer.shapes);\r\n    croppingLayer.shapes = [];\r\n\r\n    StateManager.getInstance().setState('cropping-layer', croppingLayer);\r\n    StateManager.getInstance().setState('selection-rect-size', { w: 0, y: 0 });\r\n}\r\n\r\n/**\r\n * Deletes the shapes it passes over\r\n * @param pos \r\n * @returns \r\n */\r\nfunction erase(pos: Point2D) {\r\n    const currentLayer = getCurrentLayer();\r\n    if (!currentLayer)\r\n        return;\r\n\r\n    const brushSize = StateManager.getInstance().getState('brush-size') / PAINT_CANVAS.width;\r\n    const posClip = MV.vec2((2 * ((pos.x - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - pos.y + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    currentLayer.shapes = currentLayer.shapes.filter((shape) => {\r\n        for (let i = 0; i < shape.vertexData.length; i += 2) {\r\n            if (findLinearDistance(shape.vertexData.slice(i, i + 2), posClip) <= brushSize) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param pos \r\n * @returns \r\n */\r\nfunction freeDraw(pos: Point2D) {\r\n    const newLine = StateManager.getInstance().getState('new-line');\r\n    const currentLayer = getCurrentLayer();\r\n    if (!currentLayer)\r\n        return;\r\n\r\n    let newVertex = MV.vec2((2 * ((pos.x - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - pos.y + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n    const newColor = MV.vec4(...StateManager.getInstance().getState('picked-color'));\r\n    const brushSize = StateManager.getInstance().getState('brush-size');\r\n    const bindingRect = [0, 0, PAINT_CANVAS.width, PAINT_CANVAS.height];\r\n    let allPointsVertexData: number[][] = [newVertex];\r\n\r\n    if (!newLine) {\r\n        const prevPoint = currentLayer.shapes[0];\r\n        const prevPointVertexData = MV.vec2(prevPoint.vertexData[0], prevPoint.vertexData[1]);\r\n        addMidPoint(newVertex, prevPointVertexData, allPointsVertexData);\r\n    } else {\r\n        StateManager.getInstance().setState('new-line', false);\r\n    }\r\n\r\n    allPointsVertexData.forEach((point) => {\r\n        const newShape: Shape = {\r\n            vertexData: [...point],\r\n            colorData: [...newColor],\r\n            boundingRectData: [...bindingRect],\r\n            brushSize: [brushSize],\r\n            type: 'point',\r\n        }\r\n\r\n        currentLayer.shapes.unshift(newShape);\r\n    })\r\n}\r\n\r\n/**\r\n * Recursively adds a point at the middle of the straight line connecting two points\r\n * @param a The first point\r\n * @param b The second point\r\n * @param allPoints The array holding all the added points\r\n */\r\nfunction addMidPoint(a: number[], b: number[], allPoints: number[][]) {\r\n    const MAX_ALLOWD_DISTANCE_BTWN_PTS = 0.01;\r\n    const distance = findLinearDistance(a, b);\r\n\r\n    if (distance > MAX_ALLOWD_DISTANCE_BTWN_PTS) {\r\n        const c = findMidPoint(a, b);\r\n        allPoints.unshift(c);\r\n        addMidPoint(a, c, allPoints);\r\n        addMidPoint(c, b, allPoints);\r\n    }\r\n}\r\n\r\n/**\r\n * Finds the mid point of the straight line connecting two points\r\n * @param a The first point\r\n * @param b The second point\r\n */\r\nfunction findMidPoint(a: number[], b: number[]): number[] {\r\n    return MV.vec2((a[0] + b[0]) / 2, (a[1] + b[1]) / 2);\r\n}\r\n\r\n/**\r\n * Finds the length of the straight line connecting two points\r\n * @param a The first point\r\n * @param b The second point\r\n * @returns \r\n */\r\nfunction findLinearDistance(a: number[], b: number[]): number {\r\n    const dx = Math.abs(a[0] - b[0]);\r\n    const dy = Math.abs(a[1] - b[1]);\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\n/**\r\n * Draws a rectangle whose top left corner is at pos\r\n * @param pos \r\n * @param size \r\n */\r\nfunction drawRectangle(pos: Point2D, size: Size2D) {\r\n    const currentLayer = getCurrentLayer();\r\n    const newColor = MV.vec4(...StateManager.getInstance().getState('picked-color'));\r\n    const brushSize = StateManager.getInstance().getState('brush-size');\r\n    const bindingRect = [0, 0, PAINT_CANVAS.width, PAINT_CANVAS.height];\r\n\r\n    const t1: number[] = MV.vec2((2 * ((pos.x - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - pos.y + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const t2: number[] = MV.vec2((2 * (((pos.x + size.w) - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - pos.y + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const t3: number[] = MV.vec2((2 * ((pos.x - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - (pos.y + size.h) + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const t4: number[] = MV.vec2((2 * (((pos.x + size.w) - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - (pos.y + size.h) + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const newShape: Shape = {\r\n        vertexData: [...t1, ...t2, ...t4, ...t3],\r\n        colorData: [...newColor, ...newColor, ...newColor, ...newColor],\r\n        boundingRectData: [...bindingRect, ...bindingRect, ...bindingRect, ...bindingRect],\r\n        brushSize: [brushSize, brushSize, brushSize, brushSize],\r\n        type: 'nofill-rectangle',\r\n    }\r\n\r\n    currentLayer.shapes.unshift(newShape);\r\n}\r\n\r\n/**\r\n * Resizes the latest drawn rectangle\r\n * @param delta \r\n */\r\nfunction resizeRectangle(delta: Point2D) {\r\n    // get the last shape (which will be a rectangle)\r\n    // change its size\r\n    const currentLayer = getCurrentLayer();\r\n\r\n    // second vertex x\r\n    currentLayer.shapes[0].vertexData[2] += delta.x / PAINT_CANVAS.width * 2;\r\n\r\n    // third vertex x,y\r\n    currentLayer.shapes[0].vertexData[4] += delta.x / PAINT_CANVAS.width * 2;\r\n    currentLayer.shapes[0].vertexData[5] += delta.y / PAINT_CANVAS.height * 2;\r\n\r\n    // forth vertex y\r\n    currentLayer.shapes[0].vertexData[7] += delta.y / PAINT_CANVAS.height * 2;\r\n}\r\n\r\n/**\r\n * Solidifies the currently being drawn rectangle\r\n */\r\nfunction finalizeRectangle() {\r\n    const currentLayer = getCurrentLayer();\r\n    currentLayer.shapes[0].type = 'rectangle';\r\n}\r\n\r\n/**\r\n * Draws a triangle whose top left corner is at pos\r\n * @param pos \r\n * @param size \r\n */\r\nfunction drawTriangle(pos: Point2D, size: Size2D) {\r\n    const currentLayer = getCurrentLayer();\r\n    const newColor = MV.vec4(...StateManager.getInstance().getState('picked-color'));\r\n    const brushSize = StateManager.getInstance().getState('brush-size');\r\n    const bindingRect = [0, 0, PAINT_CANVAS.width, PAINT_CANVAS.height];\r\n\r\n    const t1: number[] = MV.vec2((2 * ((pos.x - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - pos.y + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const t2: number[] = MV.vec2((2 * (((pos.x + size.w / 2) - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - (pos.y + size.h) + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const t3: number[] = MV.vec2((2 * (((pos.x - size.w / 2) - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - (pos.y + size.h) + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1);\r\n\r\n    const newShape: Shape = {\r\n        vertexData: [...t2, ...t3, ...t1],\r\n        colorData: [...newColor, ...newColor, ...newColor],\r\n        boundingRectData: [...bindingRect, ...bindingRect, ...bindingRect],\r\n        brushSize: [brushSize, brushSize, brushSize],\r\n        type: 'nofill-triangle',\r\n    }\r\n\r\n    currentLayer.shapes.unshift(newShape);\r\n}\r\n\r\n/**\r\n * Resizes the latest drawn triangle\r\n * @param delta \r\n */\r\nfunction resizeTriangle(delta: Point2D) {\r\n    // get the last shape (which will be a triangle)\r\n    // change its size\r\n    const currentLayer = getCurrentLayer();\r\n\r\n    // second vertex x,y\r\n    currentLayer.shapes[0].vertexData[2] += delta.x / PAINT_CANVAS.width * 2;\r\n    currentLayer.shapes[0].vertexData[3] += delta.y / PAINT_CANVAS.height * 2;\r\n\r\n    // third vertex x,y\r\n    currentLayer.shapes[0].vertexData[4] -= delta.x / PAINT_CANVAS.width * 2;\r\n    currentLayer.shapes[0].vertexData[5] += delta.y / PAINT_CANVAS.height * 2;\r\n}\r\n\r\n/**\r\n * Solidifies the currently being drawn triangle\r\n */\r\nfunction finalizeTriangle() {\r\n    const currentLayer = getCurrentLayer();\r\n    currentLayer.shapes[0].type = 'triangle';\r\n}\r\n\r\n/**\r\n * Draws an elipse whose top left corner is at pos\r\n * @param pos \r\n * @param size \r\n */\r\nfunction drawElipse(pos: Point2D, size: Size2D) {\r\n    const center: number[] = MV.vec2((2 * ((pos.x - PAINT_CANVAS.offsetLeft) / PAINT_CANVAS.width) - 1),\r\n        2 * ((PAINT_CANVAS.height - pos.y + PAINT_CANVAS.offsetTop) / PAINT_CANVAS.height) - 1); // center\r\n    const currentLayer = getCurrentLayer();\r\n    const newColor: number[] = MV.vec4(...StateManager.getInstance().getState('picked-color'));\r\n    const brushSize: number = StateManager.getInstance().getState('brush-size');\r\n    const bindingRect: number[] = [0, 0, PAINT_CANVAS.width, PAINT_CANVAS.height];\r\n\r\n    const newShape: Shape = {\r\n        vertexData: [],\r\n        colorData: [],\r\n        boundingRectData: [],\r\n        brushSize: [],\r\n        type: 'nofill-elipse',\r\n        center: [...center],\r\n        size: { ...size },\r\n    }\r\n\r\n    // according to ellipse equation\r\n    const radiusX = Math.abs(size.w / PAINT_CANVAS.width);\r\n    const radiusY = Math.abs(size.h / PAINT_CANVAS.height);\r\n\r\n    for (let i = 0; i < 32; i++) {\r\n        const t: number[] = MV.vec2(center[0] + radiusX * Math.cos(i * Math.PI / 16), center[1] + radiusY * Math.sin(i * Math.PI / 16));\r\n        newShape.vertexData.push(...t);\r\n        newShape.colorData.push(...newColor);\r\n        newShape.boundingRectData.push(...bindingRect);\r\n        newShape.brushSize.push(brushSize);\r\n    }\r\n\r\n    currentLayer.shapes.unshift(newShape);\r\n}\r\n\r\n/**\r\n * Resizes the latest drawn elipse\r\n * @param delta \r\n */\r\nfunction resizeElipse(delta: { x: number, y: number }) {\r\n    // get the last shape (which will be an elipse)\r\n    // change its size\r\n    const currentLayer = getCurrentLayer();\r\n    const center = currentLayer.shapes[0].center;\r\n    const curSize = currentLayer.shapes[0].size;\r\n    if (!center || !curSize)\r\n        return;\r\n\r\n    const updatedVertexData: number[] = []\r\n    const newSize = { w: curSize.w + delta.x * 2, h: curSize.h + delta.y * 2 };\r\n    // according to ellipse equation\r\n    const radiusX = Math.abs(newSize.w / PAINT_CANVAS.width);\r\n    const radiusY = Math.abs(newSize.h / PAINT_CANVAS.height);\r\n\r\n    for (let i = 0; i < 32; i++) {\r\n        const t: number[] = MV.vec2(center[0] + radiusX * Math.cos(i * Math.PI / 16), center[1] + radiusY * Math.sin(i * Math.PI / 16));\r\n        updatedVertexData.push(...t);\r\n    }\r\n\r\n    currentLayer.shapes[0].vertexData = [...updatedVertexData];\r\n    currentLayer.shapes[0].size = { ...newSize };\r\n}\r\n\r\n/**\r\n * Solidifies the currently being drawn elipse\r\n */\r\nfunction finalizeElipse() {\r\n    const currentLayer = getCurrentLayer();\r\n    currentLayer.shapes[0].type = 'elipse';\r\n}\r\n\r\n/**\r\n * Stores the current state of the program in a timeline\r\n */\r\nfunction updateTimeline() {\r\n    const layers: Layer[] = StateManager.getInstance().getState('layers');\r\n    const curTimelineNode = StateManager.getInstance().getState('cur-timeline-node');\r\n    let timeline: Layer[][] = StateManager.getInstance().getState('timeline');\r\n\r\n    // If we're not at the most recent point of the timeline, delete the future!\r\n    if (curTimelineNode !== timeline.length - 1) {\r\n        timeline = timeline.slice(0, curTimelineNode + 1);\r\n    }\r\n\r\n    timeline.push(JSON.parse(JSON.stringify(layers)));\r\n    StateManager.getInstance().setState('cur-timeline-node', timeline.length - 1);\r\n    StateManager.getInstance().setState('timeline', timeline);\r\n}\r\n\r\n/**\r\n * Gets the latest selected layer\r\n */\r\nfunction getCurrentLayer(): Layer {\r\n    const currentLayerId = StateManager.getInstance().getState('selectedLayer');\r\n    return StateManager.getInstance().getState('layers').find((layer: Layer) => layer.id === currentLayerId);\r\n}\r\n","import { Card, CardContent, Button } from '@mui/material';\r\nimport UndoOutlinedIcon from '@mui/icons-material/UndoOutlined';\r\nimport RedoOutlinedIcon from '@mui/icons-material/RedoOutlined';\r\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\n\r\nimport { StateManager } from '../util/StateManager'\r\n\r\nexport default function ToolBar() {\r\n    return (\r\n        <Card>\r\n            <CardContent style={{ backgroundColor: '#3b4245' }}>\r\n                <Button onClick={undo}>\r\n                    <UndoOutlinedIcon sx={{ color: 'white' }} />\r\n                </Button>\r\n                <Button onClick={redo}>\r\n                    <RedoOutlinedIcon sx={{ color: 'white' }} />\r\n                </Button>\r\n                <Button onClick={downloadObjectAsJson}>\r\n                    <SaveOutlinedIcon sx={{ color: 'white' }} />\r\n                </Button>\r\n                <Button component=\"label\">\r\n                    <FileUploadIcon sx={{ color: 'white' }} />\r\n                    <input\r\n                        type=\"file\"\r\n                        hidden\r\n                        onChange={changeHandler}\r\n                    />\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n/**\r\n * Src = https://stackoverflow.com/questions/19721439/download-json-object-as-a-file-from-browser\r\n */\r\nfunction downloadObjectAsJson() {\r\n    const data = StateManager.getInstance().serialize();\r\n    const exportName = 'Drawing';\r\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data));\r\n    const downloadAnchorNode = document.createElement('a');\r\n\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".meg\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n}\r\n\r\n/**\r\n * Reads the selected file\r\n * @param event \r\n */\r\nfunction changeHandler(event: any) {\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.onload = () => {\r\n        if (fileReader.result && typeof fileReader.result === 'string')\r\n            StateManager.getInstance().initWith(fileReader.result);\r\n    }\r\n\r\n    fileReader.readAsText(event.target.files[0]);\r\n};\r\n\r\n/**\r\n * \r\n */\r\nfunction undo() {\r\n    const curTimelineNode = StateManager.getInstance().getState('cur-timeline-node');\r\n    const timeLine = StateManager.getInstance().getState('timeline');\r\n    if (curTimelineNode > 0) {\r\n        StateManager.getInstance().setState('layers', JSON.parse(JSON.stringify(timeLine[curTimelineNode - 1])));\r\n        StateManager.getInstance().setState('cur-timeline-node', curTimelineNode - 1);\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nfunction redo() {\r\n    const curTimelineNode = StateManager.getInstance().getState('cur-timeline-node');\r\n    const timeLine = StateManager.getInstance().getState('timeline');\r\n    if (curTimelineNode < timeLine.length - 1) {\r\n        StateManager.getInstance().setState('layers', JSON.parse(JSON.stringify(timeLine[curTimelineNode + 1])));\r\n        StateManager.getInstance().setState('cur-timeline-node', curTimelineNode + 1);\r\n    }\r\n}","import \"./styles.css\";\r\nimport { Container, Grid, Box } from \"@mui/material\";\r\nimport { StateManager } from \"./util/StateManager\";\r\nimport { Layers } from \"./Components/Layers\";\r\nimport ColorPicker from './Components/ColorPicker';\r\nimport ToolBox from \"./Components/ToolBox\";\r\nimport ToolBar from \"./Components/ToolBar\";\r\nimport PaintArea from \"./Components/PaintArea\";\r\n\r\n\r\nexport default function App() {\r\n    // Initial value\r\n    StateManager.getInstance().setState('picked-color', [0, 0, 0, 0]);\r\n    StateManager.getInstance().setState('brush-size', 20);\r\n    StateManager.getInstance().setState('selected-tool', 'brush');\r\n    StateManager.getInstance().setState('timeline', [[{\r\n        name: `New Layer (${1})`,\r\n        z_index: 0,\r\n        visible: true,\r\n        id: `${0}`,\r\n        shapes: [],\r\n    }]]);\r\n    StateManager.getInstance().setState('cur-timeline-node', 0);\r\n    StateManager.getInstance().setState('cropping-layer', {\r\n        name: `CropLayer`,\r\n        z_index: 0,\r\n        visible: true,\r\n        id: `${0}`,\r\n        shapes: [],\r\n    });\r\n    StateManager.getInstance().setState('layers', [{\r\n        name: `New Layer (${1})`,\r\n        z_index: 0,\r\n        visible: true,\r\n        id: `${0}`,\r\n        shapes: [],\r\n    }]);\r\n    StateManager.getInstance().setState('selectedLayer', '0');\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container>\r\n                <Grid container rowSpacing={1} columns={{ xs: 12, sm: 12, md: 12 }} >\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                        <Box mt={1} mb={2}>\r\n                            <ToolBar></ToolBar>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                        <Grid container rowSpacing={1} columns={{ xs: 12, sm: 12, md: 12 }} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                            <Grid item xs={12} sm={6} md={2}>\r\n                                <ToolBox />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} >\r\n                                <PaintArea />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6} md={4}>\r\n                                <ColorPicker />\r\n                                <Box py={2}>\r\n                                    <Layers />\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}